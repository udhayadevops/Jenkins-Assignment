pipeline {
    agent any
    stages {
        stage('Git checkout') {
            steps {
                git branch: 'k8s', url: 'https://github.com/udhayadevops/Jenkins-Assignment.git'
            }
        }
        
        stage('Print Workspace') {
            steps {
                echo "Workspace Directory: ${WORKSPACE}"
            }
        }

        stage('Build docker image'){
            steps{
                script{
                    sh '''
                        cp -r ${WORKSPACE}/configs/nginx.conf ${WORKSPACE}/index.html ${WORKSPACE}/dockerfiles/
                        docker build -t test -f ${WORKSPACE}/dockerfiles/Dockerfile ${WORKSPACE}
                    '''
                }
            }
        }

        stage('Push Docker Image To Repo') {
            steps {
                script {
                    // Replace 'YOUR_ACCESS_TOKEN' with your actual Docker Hub access token
                    withCredentials([string(credentialsId: 'docker-hub-credentials', variable: 'DOCKER_ACCESS_TOKEN')]) {
                        sh "echo \"$DOCKER_ACCESS_TOKEN\" | docker login --username udhayadevops --password-stdin"
                        sh "docker tag test udhayadevops/testing-int:${BUILD_NUMBER}"
                        sh "docker push udhayadevops/testing-int:${BUILD_NUMBER}"
                        sh "echo Pushed Docker image to Docker Hub"
                    }
                }
            }
        }
        
        stage('Install kubectl') {
            steps {
                script {
                    // Check if kubectl is already installed
                    def kubectlInstalled = sh(script: 'which kubectl', returnStatus: true) == 0
                    if (!kubectlInstalled) {
                        // Download and install kubectl
                        sh 'curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl'
                        sh 'chmod +x ./kubectl'
                        sh 'sudo mv ./kubectl /usr/local/bin/kubectl'
                    }
                }
            }
        }
        
        stage('Check kubectl version') {
            steps {
                // Add the directory to PATH
                sh 'export PATH=$PATH:/var/lib/jenkins/bin'

                // Check kubectl version
                sh 'kubectl version --client'
            }
        }
        stage('Deploy to Minikube') {
            steps {
                // Now kubectl should be available for use
                sh 'kubectl apply -f ${WORKSPACE}/manifest-files --kubeconfig=/path/to/your/kubeconfig'
            }
        }
    }
}
